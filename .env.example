# ==============================================================================
# WebChasor Environment Variables Configuration
# ==============================================================================
# Copy this file to .env and fill in your actual values
# cp .env.example .env
#
# Priority: ENV variables > config.yaml > code defaults
# ==============================================================================

# ==============================================================================
# REQUIRED: OpenAI API Configuration
# ==============================================================================
# Your OpenAI API key (required for core functionality)
OPENAI_API_KEY_AGENT=sk-your-openai-api-key-here

# ==============================================================================
# OPTIONAL: External Services API Keys
# ==============================================================================
# SerpAPI key for web search (optional, but recommended for IR queries)
# Get your key from: https://serpapi.com/
# SERPAPI_KEY=your-serpapi-key-here

# Google Maps API key for geographic queries (optional)
# Get your key from: https://console.cloud.google.com/
# GOOGLE_MAP_KEY=your-google-maps-api-key-here

# ==============================================================================
# OPTIONAL: Gunicorn Server Configuration
# ==============================================================================
# These can also be configured in config/config.yaml
# ENV variables will override YAML settings

# Number of worker processes (default: CPU cores * 2 + 1)
# Recommended: 4-32 depending on CPU and load
# WEB_WORKERS=8

# Maximum concurrent connections per worker (default: 1000)
# Total capacity = WEB_WORKERS * WORKER_CONNECTIONS
# WORKER_CONNECTIONS=1000

# Worker timeout in seconds (default: 120)
# Increase for long-running LLM queries
# WORKER_TIMEOUT=120

# Maximum pending connections queue (default: 2048)
# BACKLOG=2048

# Worker restart after N requests (default: 1000)
# Helps prevent memory leaks
# MAX_REQUESTS=1000

# Random jitter for worker restarts (default: 50)
# MAX_REQUESTS_JITTER=50

# Keep-alive timeout in seconds (default: 5)
# KEEPALIVE=5

# Log level: debug, info, warning, error, critical (default: info)
# LOG_LEVEL=info

# ==============================================================================
# OPTIONAL: Application Concurrency Control
# ==============================================================================
# These are typically configured in config.yaml, but can be overridden here

# Global concurrent request limit (default: 100)
# Controls total concurrent requests across all types
# MAX_CONCURRENT_REQUESTS=100

# LLM API concurrent request limit (default: 20)
# Prevents exceeding LLM provider rate limits
# LLM_CONCURRENT_LIMIT=20

# ==============================================================================
# Environment-Specific Examples
# ==============================================================================

# --- Development Environment ---
# Uncomment these for local development:
# WEB_WORKERS=4
# WORKER_CONNECTIONS=500
# LOG_LEVEL=debug
# MAX_CONCURRENT_REQUESTS=50
# LLM_CONCURRENT_LIMIT=10

# --- Production Environment (Low Traffic) ---
# Uncomment these for small production deployment:
# WEB_WORKERS=8
# WORKER_CONNECTIONS=1000
# WORKER_TIMEOUT=120
# LOG_LEVEL=warning
# MAX_CONCURRENT_REQUESTS=200
# LLM_CONCURRENT_LIMIT=50

# --- Production Environment (High Traffic) ---
# Uncomment these for large production deployment:
# WEB_WORKERS=16
# WORKER_CONNECTIONS=2000
# WORKER_TIMEOUT=180
# BACKLOG=4096
# LOG_LEVEL=warning
# MAX_CONCURRENT_REQUESTS=500
# LLM_CONCURRENT_LIMIT=100

# ==============================================================================
# Usage Notes
# ==============================================================================
#
# 1. Only OPENAI_API_KEY_AGENT is required for basic functionality
#
# 2. Gunicorn server parameters (WEB_WORKERS, etc.) are optional
#    - If not set, defaults from config.yaml will be used
#    - If config.yaml has no value, code defaults will be used
#
# 3. For Docker/Kubernetes deployments:
#    - Set sensitive values (API keys) via ENV or Secrets
#    - Set performance tuning via ENV or ConfigMap
#    - Keep defaults in config.yaml
#
# 4. Performance tuning:
#    - Start with defaults, monitor, then adjust
#    - See PERFORMANCE.md for detailed guidance
#
# 5. Development vs Production:
#    - Dev: Use fewer workers, debug logging
#    - Prod: Use more workers, warning logging
#
# ==============================================================================
